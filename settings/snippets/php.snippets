snippet php
	<?php
	/**
	 * Helpdesk (http://www.helpdeskhq.com)
	 *
	 * Copyright (C) 2012  Alexander Brausewetter
	 * 
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as
	 * published by the Free Software Foundation, either version 3 of the
	 * License, or (at your option) any later version.
	 * 
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU Affero General Public License for more details.
	 * 
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 *
	 * @copyright  Copyright (C) 2012  Alexander Brausewetter
	 * @license    http://www.gnu.org/licenses/agpl.html  GNU Affero General Public License
	 * @package    Helpdesk\Core
	 */
	
	${1}
snippet lphp
	<? ${1} ?>
snippet le
	<?= ${1} ?>
snippet lethis
	<?= $this->${1} ?>
snippet lif
	<? if (${1}) : ?>
		${2}
snippet lels
	<? else : ?>
		${1}
snippet leif
	<? endif ?>
# class ...
snippet class
	class ${1:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
	{
		/**
		 * Constructor
		 */
		public function __construct()
		{
		}
	}
snippet if
	if (${1}) {
		${2}
	}
snippet fun
	protected function ${1:functionName}(${2})
	{
		${3}
	}
snippet pun
	public function ${1:functionName}(${2})
	{
		${3}
	}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}
snippet try
	try {
		${2}
	} catch (${1:Exception} $e) {
	}
# lambda with closure
snippet lambda
	${1:static }function (${2:args}) use (${3:&$x, $y /*put vars in scope (closure) */}) {
		${4}
	};
# Getters & Setters
snippet set
	/**
	 * Set the ${1:parameter desc}
	 *
	 * @param  ${2:string} $${3:param}
	 * @return ${4:`substitute(Filename(), '\(_\|^\)\(.\)', '\u\2', 'g')`}
	 */
	public function set${5:Param}($$3)
	{
		$this->$3 = $$3;
		return $this;
	}

	/**
	 * Get the $1
	 *
	 * @return $2
	 */
	public function get$5()
	{
		return $this->$3;
	}
# Customized
snippet ex
	throw new ${1:Zend_Exception}('${2}');${3}
snippet var
	${1:protected} $${2:varName};${3}
snippet vd
	var_dump(${1}); exit;${2}
snippet zd
	\Zend\Debug\Debug::dump(${1}); exit;${2}
snippet post
	if ($this->getRequest()->isPost()) {
		if ($form->isValid($this->getRequest()->getPost())) {

		}
	}
snippet elem
	$this->addElement('${1:type}', '${2:name}', array(
		'label' => '${3}',
		'required' => true,
		'validators' => array(
			${4}
		),
	));

snippet res
	$result = ${1};
snippet retres
	return $result;
